<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="memberMapper">
  	<!-- namespace : 해당 mapper 파일의 고유한 별칭 -->
  	
  	<!-- 
  		
  		*DML문일 경우
  		<insert | update | delete id="각 sql문 식별자" [parameterType="전달받은 자바타입(풀클래스명)|별칭"] >
  		
  		</insert | update | delete>
  		//dml문 같은 경우 어짜피 실행결과가 처리된 행수(int)이기 때문에 resultType 또는 resultMap에 대한 속성은 안서도 된다
  		
  		*SELECT문일 경우
  		<select id="각 sql문 식별자" [parameterType="전달받은 자바타입(풀클래스명)|별칭"] resultType="조회 결과를 반환하고자 하는 자바타입" | resultMap="조회 결과를 뽑아서 매핑할 resultMap">
  		
  		</select>
  	 -->
 
  	 <!-- 
  	 	*resultMap 마이바티스의 핵심 기능 중 하나!
  	 	 ResultSet 으로 부터 조회된 컬럼값 하나씩 뽑아서 내가 지정한 VO 객체의 각 필드에 담는 역할을 수행함
  	  
  	  	<resultMap id="식별자" type="조회결과를 담아서 반환하고자 하는 vo 객체의 타입(풀클래스명) | 별칭">
  	  		<result column="db컬럼명" property="vo필드명"/>
  	  	</resultMap>
  	  	
  	  -->
  	  
  	  
  	 <resultMap id="memberResultSet" type="Member">
  	 	<result column="user_no" property="userNo"></result>
  	 	<result column="user_id" property="userId"></result>
  	 	<result column="user_pwd" property="userPwd"></result>
  	 	<result column="user_name" property="userName"></result>
  	 	<result column="email" property="email"></result>
  	 	<result column="birthday" property="birthday"></result>
  	 	<result column="gender" property="gender"></result>
  	 	<result column="phone" property="phone"></result>
  	 	<result column="address" property="address"></result>
  	 	<result column="enroll_date" property="enrollDate"></result>
  	 	<result column="modify_date" property="modifyDate"></result>
  	 	<result column="status" property="status"></result>
  	 </resultMap>
  	 
  	 <select id="loginMember" resultMap="memberResultSet" parameterType="Member">
  	 	select 
		        user_no
		      , user_id
		      , user_pwd
		      , user_name
		      , email
		      , birthday
		      , gender
		      , phone
		      , address
		      , enroll_date
		      , modify_date
		      , status
		  from member
		 where user_id = #{userId}
		   and user_pwd = #{userPwd}
		   and status = 'Y'
  	 </select>
  	 
  	 <insert id="insertMember" parameterType="Member">
  	 	insert
		  into member
		  (
		    user_no
		  , user_id
		  , user_pwd
		  , user_name
		  , email
		  , birthday
		  , gender
		  , phone
		  , address
		  )
		  values
		  (
		    seq_uno.nextval
		  , #{userId}
		  , #{userPwd}
		  , #{userName}
		  , #{email}
		  , #{birthday}
		  , #{gender}
		  , #{phone}
		  , #{address}
		  )
  	 </insert>
  			
  </mapper>